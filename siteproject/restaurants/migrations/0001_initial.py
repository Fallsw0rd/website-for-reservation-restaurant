# Generated by Django 4.2.7 on 2024-01-14 11:12

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import restaurants.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Kitchen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название ресторана')),
                ('address', models.CharField(max_length=255, verbose_name='Адрес ресторана')),
                ('contact_number', models.CharField(blank=True, max_length=11, null=True, unique=True, verbose_name='Контактный номер')),
                ('min_average_check', models.PositiveIntegerField()),
                ('max_average_check', models.PositiveIntegerField()),
                ('description', models.TextField(verbose_name='Описание')),
                ('restaurant_image', models.ImageField(blank=True, max_length=255, null=True, upload_to=restaurants.models.image_profile_path, verbose_name='Фотография профиля ресторана')),
                ('photo_1', models.ImageField(blank=True, max_length=255, null=True, upload_to=restaurants.models.image_restaurant_path, verbose_name='Первая фотография ресторана')),
                ('photo_2', models.ImageField(blank=True, max_length=255, null=True, upload_to=restaurants.models.image_restaurant_path, verbose_name='Вторая фотография ресторана')),
                ('photo_3', models.ImageField(blank=True, max_length=255, null=True, upload_to=restaurants.models.image_restaurant_path, verbose_name='Третья фотография ресторана')),
                ('status', models.BooleanField(default=True)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='restaurants', to='restaurants.district')),
                ('features', models.ManyToManyField(to='restaurants.feature')),
                ('kitchens', models.ManyToManyField(to='restaurants.kitchen')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Ресторан',
                'verbose_name_plural': 'Рестораны',
            },
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='VisitPurpose',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='WorkTime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monday_opening_time', models.TimeField()),
                ('monday_closing_time', models.TimeField()),
                ('tuesday_opening_time', models.TimeField()),
                ('tuesday_closing_time', models.TimeField()),
                ('wednesday_opening_time', models.TimeField()),
                ('wednesday_closing_time', models.TimeField()),
                ('thursday_opening_time', models.TimeField()),
                ('thursday_closing_time', models.TimeField()),
                ('friday_opening_time', models.TimeField()),
                ('friday_closing_time', models.TimeField()),
                ('saturday_opening_time', models.TimeField()),
                ('saturday_closing_time', models.TimeField()),
                ('sunday_opening_time', models.TimeField()),
                ('sunday_closing_time', models.TimeField()),
                ('restaurant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='worktime', to='restaurants.restaurant')),
            ],
            options={
                'verbose_name': 'График работы',
                'verbose_name_plural': 'Графики работ',
            },
        ),
        migrations.CreateModel(
            name='Table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(verbose_name='Номер стола')),
                ('capacity', models.IntegerField(verbose_name='Вместимость')),
                ('photo', models.ImageField(blank=True, max_length=255, null=True, upload_to='photos/tables/', verbose_name='Фотография стола')),
                ('x_in_map', models.PositiveIntegerField(verbose_name='Координаты X')),
                ('y_in_map', models.PositiveIntegerField(verbose_name='Координаты Y')),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurants.restaurant')),
            ],
            options={
                'verbose_name': 'Стол',
                'verbose_name_plural': 'Столы',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reviewer_name', models.CharField(max_length=255, verbose_name='Имя и фамилия')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
                ('rating', models.IntegerField()),
                ('created_at', models.DateField(default=django.utils.timezone.now)),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurants.restaurant')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='restaurant',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='restaurants', to='restaurants.type'),
        ),
        migrations.AddField(
            model_name='restaurant',
            name='visit_purposes',
            field=models.ManyToManyField(to='restaurants.visitpurpose'),
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Дата')),
                ('time', models.TimeField(verbose_name='Время')),
                ('name', models.CharField(max_length=255, verbose_name='ФИО')),
                ('count_guess', models.PositiveIntegerField(verbose_name='Количество человек')),
                ('phone', models.CharField(max_length=15, verbose_name='Номер телефона')),
                ('additional_info', models.TextField(blank=True, max_length=300, null=True, verbose_name='Дополнительная информация')),
                ('is_accepted', models.BooleanField(default=False)),
                ('is_cancelled', models.BooleanField(default=False)),
                ('table', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurants.table')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
